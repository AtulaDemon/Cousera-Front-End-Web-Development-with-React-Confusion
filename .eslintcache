[{"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\reportWebVitals.js":"1","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\App.js":"2","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\MenuComponent.js":"3","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\index.js":"4","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\DishDetailComponent.js":"5","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\shared\\dishes.js":"6","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\MainComponent.js":"7","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\HeaderComponent.js":"8","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\FooterComponent.js":"9","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\ContactComponent.js":"10","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\shared\\comments.js":"11","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\shared\\promotions.js":"12","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\HomeComponent.js":"13","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\AboutComponent.js":"14","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\shared\\leaders.js":"15"},{"size":362,"mtime":1609428965971,"results":"16","hashOfConfig":"17"},{"size":342,"mtime":1612280342714,"results":"18","hashOfConfig":"17"},{"size":1362,"mtime":1613329571774,"results":"19","hashOfConfig":"17"},{"size":643,"mtime":1612273015884,"results":"20","hashOfConfig":"17"},{"size":2068,"mtime":1613329324683,"results":"21","hashOfConfig":"17"},{"size":1490,"mtime":1613060890667,"results":"22","hashOfConfig":"17"},{"size":2009,"mtime":1613328526303,"results":"23","hashOfConfig":"17"},{"size":5446,"mtime":1613468052343,"results":"24","hashOfConfig":"17"},{"size":2638,"mtime":1613329576960,"results":"25","hashOfConfig":"17"},{"size":10770,"mtime":1613465191983,"results":"26","hashOfConfig":"17"},{"size":4117,"mtime":1613060942375,"results":"27","hashOfConfig":"17"},{"size":435,"mtime":1613061023334,"results":"28","hashOfConfig":"17"},{"size":1109,"mtime":1613062197139,"results":"29","hashOfConfig":"17"},{"size":4242,"mtime":1613329572870,"results":"30","hashOfConfig":"17"},{"size":2345,"mtime":1613060968950,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"hge7kl",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\reportWebVitals.js",[],["66","67"],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\App.js",[],["68","69"],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\MenuComponent.js",[],["70","71"],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\index.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\DishDetailComponent.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\shared\\dishes.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\MainComponent.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\HeaderComponent.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\FooterComponent.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\ContactComponent.js",["72"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Form, FormGroup, Label, Input, Col, FormFeedback } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: '',\r\n            agree: false,\r\n            contactType: 'Tel.',\r\n            message: '',\r\n            touched: {\r\n                firstname: false,\r\n                lastname: false,\r\n                telnum: false,\r\n                email: false\r\n            }\r\n        };\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleBlur = this.handleBlur.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n          [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        console.log('Current State is: ' + JSON.stringify(this.state));\r\n        alert('Current State is: ' + JSON.stringify(this.state));\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleBlur = (field) => (evt) => {\r\n        this.setState({\r\n            touched: { ...this.state.touched, [field]: true}\r\n        });\r\n    }\r\n\r\n    validate(firstname, lastname, telnum, email) {\r\n        const errors = {\r\n            firstname: '',\r\n            lastname: '',\r\n            telnum: '',\r\n            email: ''\r\n        };\r\n        \r\n        if (this.state.touched.firstname && firstname.length < 3) {\r\n            errors.firstname = 'First Name should be >= 3 characters';\r\n        } else if (this.state.touched.firstname && firstname.length > 10) {\r\n            errors.firstname = 'First Name should be <= 10 characters';\r\n        }\r\n\r\n        if (this.state.touched.lastname && lastname.length < 3) {\r\n            errors.lastname = 'Last Name should be >= 3 characters';\r\n        } else if (this.state.touched.lastname && lastname.length > 10) {\r\n            errors.lastname = 'Last Name should be <= 10 characters';\r\n        }\r\n\r\n        const telReg = /^\\d+$/;\r\n        if (this.state.touched.telnum && !telReg.test(telnum)) {\r\n            errors.telnum = 'Tel. Number should contain only numbers';\r\n        }\r\n\r\n        if (this.state.touched.email && email.split('').filter(x => x === '@').length !== 1) {\r\n            errors.email = 'Email should contain a @';\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    render() {\r\n        const errors = this.validate(this.state.firstname, this.state.lastname, \r\n            this.state.telnum, this.state.email)\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us ur feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"firstname\" name=\"firstname\" \r\n                                        placeholder=\"First Name\" value={this.state.firstname} \r\n                                        onBlur={this.handleBlur('firstname')}\r\n                                        valid={errors.firstname === ''}\r\n                                        invalid={errors.firstname !== ''}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.firstname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"text\" id=\"lastname\" name=\"lastname\" \r\n                                        placeholder=\"Last Name\" value={this.state.lastname} \r\n                                        valid={errors.lastname === ''}\r\n                                        invalid={errors.lastname !== ''}\r\n                                        onBlur={this.handleBlur('lastname')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.lastname}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"tel\" id=\"telnum\" name=\"telnum\" \r\n                                        placeholder=\"Tel. Number\" value={this.state.telnum} \r\n                                        valid={errors.telnum === ''}\r\n                                        invalid={errors.telnum !== ''}\r\n                                        onBlur={this.handleBlur('telnum')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.telnum}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"email\" id=\"email\" name=\"email\" \r\n                                        placeholder=\"Email\" value={this.state.email} \r\n                                        valid={errors.email === ''}\r\n                                        invalid={errors.email !== ''}\r\n                                        onBlur={this.handleBlur('email')}\r\n                                        onChange={this.handleInputChange} />\r\n                                    <FormFeedback>{errors.email}</FormFeedback>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <FormGroup check>\r\n                                        <Label check>\r\n                                            <Input type=\"checkbox\" name=\"agree\" \r\n                                                checked={this.state.agree} \r\n                                                onChange={this.handleInputChange} /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                            \r\n                                        </Label>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Input type=\"select\" name=\"contactType\" \r\n                                        value={this.state.contactType} \r\n                                        onChange={this.handleInputChange}> \r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Label htmlFor=\"message\" md={2}>Ur Feadback</Label>\r\n                                <Col md={10}>\r\n                                    <Input type=\"textarea\" id=\"message\" name=\"message\" \r\n                                        rows=\"12\" value={this.state.message} \r\n                                        onChange={this.handleInputChange} />\r\n                                </Col>\r\n                            </FormGroup>\r\n                            <FormGroup row>\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">Send Feedback</Button>\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\shared\\comments.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\shared\\promotions.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\HomeComponent.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\AboutComponent.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\shared\\leaders.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"73","replacedBy":"77"},{"ruleId":"75","replacedBy":"78"},{"ruleId":"73","replacedBy":"79"},{"ruleId":"75","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":121,"column":29,"nodeType":"83","endLine":121,"endColumn":71},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],["84"],["85"],["84"],["85"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]