[{"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\reportWebVitals.js":"1","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\App.js":"2","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\MenuComponent.js":"3","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\index.js":"4","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\DishDetailComponent.js":"5","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\shared\\dishes.js":"6","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\MainComponent.js":"7","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\HeaderComponent.js":"8","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\FooterComponent.js":"9","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\ContactComponent.js":"10","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\shared\\comments.js":"11","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\shared\\promotions.js":"12","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\HomeComponent.js":"13","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\AboutComponent.js":"14","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\shared\\leaders.js":"15","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\redux\\comments.js":"16","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\redux\\configureStore.js":"17","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\redux\\ActionTypes.js":"18","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\redux\\ActionCreators.js":"19","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\redux\\dishes.js":"20","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\LoadingComponent.js":"21","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\redux\\promotions.js":"22","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\redux\\leaders.js":"23","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\shared\\baseUrl.js":"24"},{"size":362,"mtime":1609428965971,"results":"25","hashOfConfig":"26"},{"size":536,"mtime":1614194325260,"results":"27","hashOfConfig":"26"},{"size":1974,"mtime":1614535023798,"results":"28","hashOfConfig":"26"},{"size":643,"mtime":1612273015884,"results":"29","hashOfConfig":"26"},{"size":7386,"mtime":1614958266160,"results":"30","hashOfConfig":"26"},{"size":1490,"mtime":1613060890667,"results":"31","hashOfConfig":"26"},{"size":3720,"mtime":1614957305108,"results":"32","hashOfConfig":"26"},{"size":5446,"mtime":1613468052343,"results":"33","hashOfConfig":"26"},{"size":2638,"mtime":1613329576960,"results":"34","hashOfConfig":"26"},{"size":9791,"mtime":1614707778825,"results":"35","hashOfConfig":"26"},{"size":4117,"mtime":1613060942375,"results":"36","hashOfConfig":"26"},{"size":435,"mtime":1613061023334,"results":"37","hashOfConfig":"26"},{"size":1892,"mtime":1614957857264,"results":"38","hashOfConfig":"26"},{"size":4242,"mtime":1613329572870,"results":"39","hashOfConfig":"26"},{"size":2345,"mtime":1613060968950,"results":"40","hashOfConfig":"26"},{"size":657,"mtime":1614854470211,"results":"41","hashOfConfig":"26"},{"size":795,"mtime":1614707651971,"results":"42","hashOfConfig":"26"},{"size":411,"mtime":1614795813667,"results":"43","hashOfConfig":"26"},{"size":4323,"mtime":1614854830238,"results":"44","hashOfConfig":"26"},{"size":631,"mtime":1614794243393,"results":"45","hashOfConfig":"26"},{"size":257,"mtime":1614956926407,"results":"46","hashOfConfig":"26"},{"size":635,"mtime":1614795977386,"results":"47","hashOfConfig":"26"},{"size":184,"mtime":1614505484491,"results":"48","hashOfConfig":"26"},{"size":50,"mtime":1614793445918,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"hge7kl",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"73"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\reportWebVitals.js",[],["105","106"],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\App.js",[],["107","108"],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\MenuComponent.js",[],["109","110"],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\index.js",[],["111","112"],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\DishDetailComponent.js",["113","114","115"],"import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, BreadcrumbItem, Breadcrumb, Button, Label, \r\n    Modal, ModalHeader, ModalBody, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len)\r\nconst minLength = (len) => (val) => (val) && (val.length >= len)\r\n\r\nclass RenderComments extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isModalOpen: false,\r\n            \r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n    \r\n    render() { \r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <h3>Comments</h3>\r\n                <RenderCommentsList comments={this.props.comments} /> \r\n                <Button outline onClick={this.toggleModal} className=\"btn btn-outline-secondary float-left\">\r\n                    <span className=\"fa fa-pencil fa-lg\"> Submit Comment </span>\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Label htmlFor=\"rating\">Rating</Label>\r\n                                    <Control.select model=\".rating\" name=\"rating\" \r\n                                        className=\"form-control\"> \r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Label htmlFor=\"author\">Your Name</Label>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\" \r\n                                        placeholder=\"Your Name\" className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15) \r\n                                        }} />\r\n                                    <Errors className=\"text-danger\" model=\".author\" show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Label htmlFor=\"message\">Comment</Label>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" \r\n                                        rows=\"6\" className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">Submit</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RenderDish({dish}) {\r\n    return (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <FadeTransform in \r\n            transformProps={{\r\n                exitTransform: 'scale(0.5) translateY(-50%)'\r\n            }}>\r\n                <Card>\r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name}/>\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction RenderCommentsList({comments}) {\r\n    const cmts = comments.map((one) => {\r\n        const dateS = new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(one.date));\r\n\r\n        return (\r\n            <Fade in>\r\n                <li key={one.id}>\r\n                    <p>{one.comment}</p>\r\n                    <p>-- {one.author}, {dateS}</p>\r\n                </li>\r\n            </Fade>\r\n        );\r\n    });\r\n    \r\n    return (\r\n        <ul className=\"list-unstyled\">\r\n            <Stagger in>\r\n                {cmts}\r\n            </Stagger>\r\n        </ul>\r\n    );\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n    if(props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );     \r\n    } else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );    \r\n    } else if (props.dish != null) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderDish dish={props.dish}/>\r\n                    <RenderComments comments={props.comments} \r\n                        postComment={props.postComment}\r\n                        dishId={props.dish.id} /> \r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default DishDetail;","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\shared\\dishes.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\MainComponent.js",["116"],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\HeaderComponent.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\FooterComponent.js",[],["117","118"],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\ContactComponent.js",["119","120","121","122","123","124","125","126","127"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors, actions  } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len)\r\nconst minLength = (len) => (val) => (val) && (val.length >= len)\r\nconst isNumber = (val) => !isNaN(Number(val))\r\nconst validEmail = (val) => /^[A-Z0-9.-]+@[A-Z0-9._%+-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us ur feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\" \r\n                                        placeholder=\"First Name\" className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15) \r\n                                        }} />\r\n                                    <Errors className=\"text-danger\" model=\".firstname\" show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" \r\n                                        placeholder=\"Last Name\" className=\"form-control\" \r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15) \r\n                                        }} />\r\n                                    <Errors className=\"text-danger\" model=\".lastname\" show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\" \r\n                                        placeholder=\"Tel. Number\" className=\"form-control\" \r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber \r\n                                        }} />\r\n                                    <Errors className=\"text-danger\" model=\".telnum\" show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\" \r\n                                        placeholder=\"Email\" className=\"form-control\" \r\n                                        validators={{\r\n                                            required, validEmail \r\n                                        }} />\r\n                                    <Errors className=\"text-danger\" model=\".email\" show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid email address'\r\n                                        }} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\" \r\n                                                className=\"form-check-input\" /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\" \r\n                                        className=\"form-control\"> \r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Ur Feadback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" \r\n                                        rows=\"12\" className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">Send Feedback</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\shared\\comments.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\shared\\promotions.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\HomeComponent.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\AboutComponent.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\shared\\leaders.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\redux\\comments.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\redux\\configureStore.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\redux\\ActionTypes.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\redux\\ActionCreators.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\redux\\dishes.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\LoadingComponent.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\redux\\promotions.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\redux\\leaders.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\shared\\baseUrl.js",[],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"128","replacedBy":"132"},{"ruleId":"130","replacedBy":"133"},{"ruleId":"128","replacedBy":"134"},{"ruleId":"130","replacedBy":"135"},{"ruleId":"128","replacedBy":"136"},{"ruleId":"130","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":53,"column":37,"nodeType":"140","endLine":54,"endColumn":66},{"ruleId":"138","severity":1,"message":"141","line":66,"column":37,"nodeType":"140","endLine":70,"endColumn":46},{"ruleId":"138","severity":1,"message":"142","line":82,"column":37,"nodeType":"140","endLine":83,"endColumn":77},{"ruleId":"143","severity":1,"message":"144","line":34,"column":3,"nodeType":"145","messageId":"146","endLine":36,"endColumn":4},{"ruleId":"128","replacedBy":"147"},{"ruleId":"130","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":4,"column":33,"nodeType":"151","messageId":"152","endLine":4,"endColumn":40},{"ruleId":"153","severity":1,"message":"154","line":59,"column":29,"nodeType":"140","endLine":59,"endColumn":71},{"ruleId":"138","severity":1,"message":"141","line":73,"column":37,"nodeType":"140","endLine":77,"endColumn":46},{"ruleId":"138","severity":1,"message":"141","line":89,"column":37,"nodeType":"140","endLine":93,"endColumn":46},{"ruleId":"138","severity":1,"message":"141","line":105,"column":37,"nodeType":"140","endLine":109,"endColumn":46},{"ruleId":"138","severity":1,"message":"141","line":122,"column":37,"nodeType":"140","endLine":126,"endColumn":46},{"ruleId":"138","severity":1,"message":"155","line":138,"column":45,"nodeType":"140","endLine":139,"endColumn":80},{"ruleId":"138","severity":1,"message":"139","line":145,"column":37,"nodeType":"140","endLine":146,"endColumn":66},{"ruleId":"138","severity":1,"message":"142","line":155,"column":37,"nodeType":"140","endLine":156,"endColumn":78},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],["156"],["157"],["156"],["157"],["156"],["157"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["156"],["157"],"no-unused-vars","'actions' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]