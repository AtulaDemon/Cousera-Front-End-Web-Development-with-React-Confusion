[{"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\reportWebVitals.js":"1","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\App.js":"2","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\MenuComponent.js":"3","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\index.js":"4","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\DishDetailComponent.js":"5","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\shared\\dishes.js":"6","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\MainComponent.js":"7","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\HeaderComponent.js":"8","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\FooterComponent.js":"9","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\ContactComponent.js":"10","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\shared\\comments.js":"11","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\shared\\promotions.js":"12","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\HomeComponent.js":"13","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\AboutComponent.js":"14","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\shared\\leaders.js":"15","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\redux\\comments.js":"16","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\redux\\configureStore.js":"17","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\redux\\ActionTypes.js":"18","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\redux\\ActionCreators.js":"19"},{"size":362,"mtime":1609428965971,"results":"20","hashOfConfig":"21"},{"size":536,"mtime":1614194325260,"results":"22","hashOfConfig":"21"},{"size":1362,"mtime":1613329571774,"results":"23","hashOfConfig":"21"},{"size":643,"mtime":1612273015884,"results":"24","hashOfConfig":"21"},{"size":6402,"mtime":1614509293492,"results":"25","hashOfConfig":"21"},{"size":1490,"mtime":1613060890667,"results":"26","hashOfConfig":"21"},{"size":2336,"mtime":1614508931015,"results":"27","hashOfConfig":"21"},{"size":5446,"mtime":1613468052343,"results":"28","hashOfConfig":"21"},{"size":2638,"mtime":1613329576960,"results":"29","hashOfConfig":"21"},{"size":9738,"mtime":1614361378423,"results":"30","hashOfConfig":"21"},{"size":4117,"mtime":1613060942375,"results":"31","hashOfConfig":"21"},{"size":435,"mtime":1613061023334,"results":"32","hashOfConfig":"21"},{"size":1109,"mtime":1614506923865,"results":"33","hashOfConfig":"21"},{"size":4242,"mtime":1613329572870,"results":"34","hashOfConfig":"21"},{"size":2345,"mtime":1613060968950,"results":"35","hashOfConfig":"21"},{"size":455,"mtime":1614508440117,"results":"36","hashOfConfig":"21"},{"size":486,"mtime":1614507475645,"results":"37","hashOfConfig":"21"},{"size":41,"mtime":1614507780984,"results":"38","hashOfConfig":"21"},{"size":281,"mtime":1614508626771,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"hge7kl",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\reportWebVitals.js",[],["83","84"],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\App.js",[],["85","86"],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\MenuComponent.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\index.js",[],["87","88"],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\DishDetailComponent.js",["89","90","91"],"import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, BreadcrumbItem, Breadcrumb, Button, Label, \r\n    Modal, ModalHeader, ModalBody, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len)\r\nconst minLength = (len) => (val) => (val) && (val.length >= len)\r\n\r\nclass RenderComments extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isModalOpen: false,\r\n            \r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.addComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n    \r\n    render() { \r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <h3>Comments</h3>\r\n                <RenderCommentsList comments={this.props.comments} /> \r\n                <Button outline onClick={this.toggleModal} className=\"btn btn-outline-secondary float-left\">\r\n                    <span className=\"fa fa-pencil fa-lg\"> Submit Comment </span>\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Label htmlFor=\"rating\">Rating</Label>\r\n                                    <Control.select model=\".rating\" name=\"rating\" \r\n                                        className=\"form-control\"> \r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Label htmlFor=\"author\">Your Name</Label>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\" \r\n                                        placeholder=\"Your Name\" className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15) \r\n                                        }} />\r\n                                    <Errors className=\"text-danger\" model=\".author\" show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }} />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Label htmlFor=\"message\">Comment</Label>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" \r\n                                        rows=\"6\" className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">Submit</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RenderDish({dish}) {\r\n    return (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <Card>\r\n                <CardImg width=\"100%\" src={dish.image} alt={dish.name}/>\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction RenderCommentsList({comments}) {\r\n    const cmts = comments.map((one) => {\r\n        const dateS = new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(one.date));\r\n\r\n        return (\r\n            <li key={one.id}>\r\n                <p>{one.comment}</p>\r\n                <p>-- {one.author}, {dateS}</p>\r\n            </li>\r\n        );\r\n    });\r\n    \r\n    return (\r\n        <ul className=\"list-unstyled\">{cmts}</ul>\r\n    );\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n    if(props.dish != null) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderDish dish={props.dish}/>\r\n                    <RenderComments comments={props.comments} \r\n                        addComment={props.addComment}\r\n                        dishId={props.dish.id} /> \r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default DishDetail;","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\shared\\dishes.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\MainComponent.js",["92"],"import React, { Component } from 'react';\r\nimport Header from './HeaderComponent'\r\nimport Home from './HomeComponent';\r\nimport About from './AboutComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishDetailComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { addComment } from '../redux/ActionCreators';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addComment: (dishId, rating, author, comment) => dispatch(addComment(dishId, rating, author, comment))\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n\r\n    const HomePage = () => {\r\n      const inputDish = this.props.dishes.filter((dish) => dish.featured)[0];\r\n      const inputPromotion = this.props.promotions.filter((promo) => promo.featured)[0];\r\n      const inputLeader = this.props.leaders.filter((leader) => leader.featured)[0];\r\n\r\n      return (\r\n        <Home dish={inputDish} promotion={inputPromotion} leader={inputLeader} />\r\n      );\r\n    }\r\n    \r\n    const DishWithId = ({match}) => {\r\n      return (\r\n        <DishDetail dish={this.props.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n          comments={this.props.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\r\n          addComment={this.props.addComment}\r\n          />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header/>\r\n        <Switch>\r\n          <Route path=\"/home\" component={HomePage} />\r\n          <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders} />} />\r\n          <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n          <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n          <Route exact path=\"/contactus\" component={Contact} />\r\n          <Redirect to=\"/home\" />\r\n        </Switch>\r\n        <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\HeaderComponent.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\FooterComponent.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\ContactComponent.js",["93","94","95","96","97","98","99","100"],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\shared\\comments.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\shared\\promotions.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\HomeComponent.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\components\\AboutComponent.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\shared\\leaders.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\redux\\comments.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\redux\\configureStore.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\redux\\ActionTypes.js",[],"D:\\CodeWebApps\\Coursera\\Front-EndWebDevelopmentwithReact\\confusion\\src\\redux\\ActionCreators.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"101","replacedBy":"105"},{"ruleId":"103","replacedBy":"106"},{"ruleId":"101","replacedBy":"107"},{"ruleId":"103","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":50,"column":37,"nodeType":"111","endLine":51,"endColumn":66},{"ruleId":"109","severity":1,"message":"112","line":63,"column":37,"nodeType":"111","endLine":67,"endColumn":46},{"ruleId":"109","severity":1,"message":"113","line":79,"column":37,"nodeType":"111","endLine":80,"endColumn":77},{"ruleId":"114","severity":1,"message":"115","line":28,"column":3,"nodeType":"116","messageId":"117","endLine":30,"endColumn":4},{"ruleId":"118","severity":1,"message":"119","line":58,"column":29,"nodeType":"111","endLine":58,"endColumn":71},{"ruleId":"109","severity":1,"message":"112","line":72,"column":37,"nodeType":"111","endLine":76,"endColumn":46},{"ruleId":"109","severity":1,"message":"112","line":88,"column":37,"nodeType":"111","endLine":92,"endColumn":46},{"ruleId":"109","severity":1,"message":"112","line":104,"column":37,"nodeType":"111","endLine":108,"endColumn":46},{"ruleId":"109","severity":1,"message":"112","line":121,"column":37,"nodeType":"111","endLine":125,"endColumn":46},{"ruleId":"109","severity":1,"message":"120","line":137,"column":45,"nodeType":"111","endLine":138,"endColumn":80},{"ruleId":"109","severity":1,"message":"110","line":144,"column":37,"nodeType":"111","endLine":145,"endColumn":66},{"ruleId":"109","severity":1,"message":"113","line":154,"column":37,"nodeType":"111","endLine":155,"endColumn":78},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],["121"],["122"],["121"],["122"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]